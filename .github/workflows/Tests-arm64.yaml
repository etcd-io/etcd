name: Tests-arm64
on: [push, pull_request]
permissions: read-all
jobs:
  test:
    # this is to prevent the job to run at forked projects
    if: github.repository == 'etcd-io/etcd'
    runs-on: [self-hosted, Linux, ARM64]
    container: golang:1.19-bullseye
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        target:
          - linux-arm64-integration-1-cpu
          - linux-arm64-integration-2-cpu
          - linux-arm64-integration-4-cpu
          - linux-arm64-unit-4-cpu-race
    steps:
      - uses: actions/checkout@v2
      - run: git config --system --add safe.directory '*'
      - id: goversion
        run: echo "goversion=$(cat .go-version)" >> "$GITHUB_OUTPUT"
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ steps.goversion.outputs.goversion }}
      - env:
          TARGET: ${{ matrix.target }}
        run: |
          set -euo pipefail
          go clean -testcache

          mkdir "${TARGET}"
          export JUNIT_REPORT_DIR=$(realpath ${TARGET})
          case "${TARGET}" in
            linux-arm64-integration-1-cpu)
              GOOS=linux GOARCH=arm64 CPU=1 make test-integration
              ;;
            linux-arm64-integration-2-cpu)
              GOOS=linux GOARCH=arm64 CPU=2 make test-integration
              ;;
            linux-arm64-integration-4-cpu)
              GOOS=linux GOARCH=arm64 CPU=4 make test-integration
              ;;
            linux-arm64-unit-4-cpu-race)
              GOOS=linux GOARCH=arm64 CPU=4 RACE=true GO_TEST_FLAGS='-p=2' make test-unit
              ;;
            *)
              echo "Failed to find target"
              exit 1
              ;;
          esac
